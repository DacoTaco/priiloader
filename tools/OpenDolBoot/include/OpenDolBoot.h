// OpenDolBoot.h : Defines the entry point for the console application.
//

#include <stdio.h>
#include <stdlib.h>
#include <stdarg.h>
#define VERSION "0.2"
#ifdef WIN32
#include <windows.h>
#define sleep(x) Sleep(x*1000)
#define SwapEndian(x) _byteswap_ulong(x)
#define SwapEndian16(x) _byteswap_ushort(x)
#else
#define SwapEndian(x) __builtin_bswap32(x)
#define SwapEndian16(x) __builtin_bswap16(x)
#include <unistd.h>
#include <string.h>
#endif

typedef struct {
	unsigned int offsetText[7];
	unsigned int offsetData[11];
	unsigned int addressText[7];
	unsigned int addressData[11];
	unsigned int sizeText[7];
	unsigned int sizeData[11];
	unsigned int addressBSS;
	unsigned int sizeBSS;
	unsigned int entrypoint;
	int padding1[7];
} dolhdr;

typedef struct {
	std::string filename;
	unsigned int file_size;
	unsigned char* data;
} file_info;

typedef struct{
	unsigned char nandcode_part1[0x124];
	unsigned short int mov_upper_entrypoint;
	unsigned short upper_entrypoint;
	unsigned short int mov_lower_entrypoint;
	unsigned short lower_entrypoint;
	unsigned char nandcode_part2[0x14];
} Nandcode;

unsigned char _nboot[] = {
	0x3C, 0x60, 0x00, 0x11, 0x60, 0x63, 0x0C, 0x64, 0x7C, 0x70, 0xFB, 0xA6, 0x4C, 0x00, 0x01, 0x2C, 
	0x38, 0x80, 0x20, 0x00, 0x7C, 0x80, 0x01, 0x24, 0x60, 0x63, 0xC0, 0x00, 0x7C, 0x70, 0xFB, 0xA6, 
	0x4C, 0x00, 0x01, 0x2C, 0x38, 0x00, 0x00, 0x00, 0x7C, 0x10, 0x83, 0xA6, 0x7C, 0x12, 0x83, 0xA6, 
	0x7C, 0x14, 0x83, 0xA6, 0x7C, 0x16, 0x83, 0xA6, 0x7C, 0x18, 0x83, 0xA6, 0x7C, 0x1A, 0x83, 0xA6, 
	0x7C, 0x1C, 0x83, 0xA6, 0x7C, 0x1E, 0x83, 0xA6, 0x7C, 0x10, 0x8B, 0xA6, 0x7C, 0x12, 0x8B, 0xA6, 
	0x7C, 0x14, 0x8B, 0xA6, 0x7C, 0x16, 0x8B, 0xA6, 0x7C, 0x18, 0x8B, 0xA6, 0x7C, 0x1A, 0x8B, 0xA6, 
	0x7C, 0x1C, 0x8B, 0xA6, 0x7C, 0x1E, 0x8B, 0xA6, 0x4C, 0x00, 0x01, 0x2C, 0x3C, 0x00, 0x80, 0x00, 
	0x7C, 0x00, 0x01, 0xA4, 0x7C, 0x01, 0x01, 0xA4, 0x7C, 0x02, 0x01, 0xA4, 0x7C, 0x03, 0x01, 0xA4, 
	0x7C, 0x04, 0x01, 0xA4, 0x7C, 0x05, 0x01, 0xA4, 0x7C, 0x06, 0x01, 0xA4, 0x7C, 0x07, 0x01, 0xA4, 
	0x7C, 0x08, 0x01, 0xA4, 0x7C, 0x09, 0x01, 0xA4, 0x7C, 0x0A, 0x01, 0xA4, 0x7C, 0x0B, 0x01, 0xA4, 
	0x7C, 0x0C, 0x01, 0xA4, 0x7C, 0x0D, 0x01, 0xA4, 0x7C, 0x0E, 0x01, 0xA4, 0x7C, 0x0F, 0x01, 0xA4, 
	0x4C, 0x00, 0x01, 0x2C, 0x38, 0x60, 0x00, 0x02, 0x3C, 0x80, 0x80, 0x00, 0x60, 0x84, 0x1F, 0xFF, 
	0x7C, 0x71, 0x83, 0xA6, 0x7C, 0x90, 0x83, 0xA6, 0x7C, 0x79, 0x83, 0xA6, 0x7C, 0x98, 0x83, 0xA6, 
	0x4C, 0x00, 0x01, 0x2C, 0x3C, 0x63, 0x10, 0x00, 0x3C, 0x84, 0x10, 0x00, 0x7C, 0x71, 0x8B, 0xA6, 
	0x7C, 0x90, 0x8B, 0xA6, 0x7C, 0x79, 0x8B, 0xA6, 0x7C, 0x98, 0x8B, 0xA6, 0x4C, 0x00, 0x01, 0x2C, 
	0x38, 0x60, 0x00, 0x2A, 0x3C, 0x80, 0xC0, 0x00, 0x60, 0x84, 0x1F, 0xFF, 0x7C, 0x7B, 0x83, 0xA6, 
	0x7C, 0x9A, 0x83, 0xA6, 0x4C, 0x00, 0x01, 0x2C, 0x3C, 0x63, 0x10, 0x00, 0x3C, 0x84, 0x10, 0x00, 
	0x7C, 0x7B, 0x8B, 0xA6, 0x7C, 0x9A, 0x8B, 0xA6, 0x4C, 0x00, 0x01, 0x2C, 0x3C, 0x60, 0x82, 0x00, 
	0x7C, 0x73, 0xFB, 0xA6, 0x3C, 0x60, 0x81, 0x00, 0x60, 0x63, 0x00, 0x00, 0x7C, 0x7A, 0x03, 0xA6, 
	0x7C, 0x60, 0x00, 0xA6, 0x60, 0x63, 0x00, 0x30, 0x7C, 0x7B, 0x03, 0xA6, 0x4C, 0x00, 0x00, 0x64
};
const int _nboot_size = sizeof(_nboot);

void Display_Parameters ( void );
